import{_ as e,c as t,o as a,a4 as o}from"./chunks/framework.ttppV29E.js";const u=JSON.parse('{"title":"eodash instance","description":"","frontmatter":{},"headers":[],"relativePath":"eodash.md","filePath":"eodash.md"}'),s={name:"eodash.md"},r=o('<h1 id="eodash-instance" tabindex="-1">eodash instance <a class="header-anchor" href="#eodash-instance" aria-label="Permalink to &quot;eodash instance&quot;">â€‹</a></h1><p>If you have already a catalog endpoint set up (if not see <a href="./catalog.html">Catalog backend</a>) you can create an eodash instance to point to it.</p><p>We have created to example template repositories showcasing the two possible approaches of integrating eodash, this is either:</p><ul><li>as a <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_components" target="_blank" rel="noreferrer">web component</a> in the <a href="https://github.com/eodash/eodash-pages-template" target="_blank" rel="noreferrer">eodash-pages-template</a></li><li>or as an vite based application for supporting further development of custom widgets in the <a href="https://github.com/eodash/eodash-instance-template" target="_blank" rel="noreferrer">eodash-instance-template</a>.</li></ul><p>Both examples have their own application areas, so please feel free to explore both. As example here let&#39;s say you would potentially like to extend the core capabilities available, so using the eodash-instance-template could be a good candidate.</p><p>Visit the <a href="https://github.com/eodash/eodash-instance-template" target="_blank" rel="noreferrer">eodash-instance-template</a> and use the &quot;Use this template&quot; button at the top right to create your own repository.</p><p>The only change that in principle needs to be made is to point the instance to your catalog endpoint. The configuration file is under <code>/src/main.js</code>. There in the <code>stacEndpoint</code>setting add your endpoint and commit the changes to your repository. <a href="https://github.com/eodash/eodash-instance-template/blob/main/src/main.js#L8" target="_blank" rel="noreferrer">This</a> is the location in the example instance repository. If you followed the previous section for setting up your catalog your url should look something like this: <code>https://&lt;organization&gt;.github.io/&lt;repository&gt;/&lt;catalog_name&gt;/catalog.json</code>.</p><p>Once this change is done make sure that github pages are activated for the repository and pointing to the gh-pages branch. For example the instance template is deployed the same way and can be reached through <a href="https://eodash.github.io/eodash-instance-template/" target="_blank" rel="noreferrer">https://eodash.github.io/eodash-instance-template/</a></p><p>For your project you should be able to find the url in the deployment section of your github repository and should look like: <code>https://&lt;organization&gt;.github.io/&lt;repository&gt;</code></p><p>The same approach can be used for the other template repository. The <a href="https://github.com/eodash/eodash-pages-template" target="_blank" rel="noreferrer">eodash-pages-template</a> uses <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">vitepress</a> as framework in which the eodash web component variant is integrated. It also shows how to additionaly be able to create static pages, as well as integrate the <a href="./storytelling.html">storytelling</a> concept all under one static deployment.</p>',10),n=[r];function i(h,l,p,c,d,g){return a(),t("div",null,n)}const f=e(s,[["render",i]]);export{u as __pageData,f as default};
