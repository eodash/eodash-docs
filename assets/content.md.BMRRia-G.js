import{_ as t,c as e,o as n,a4 as o}from"./chunks/framework.ttppV29E.js";const u=JSON.parse('{"title":"Content integration","description":"","frontmatter":{},"headers":[],"relativePath":"content.md","filePath":"content.md"}'),a={name:"content.md"},s=o('<h1 id="content-integration" tabindex="-1">Content integration <a class="header-anchor" href="#content-integration" aria-label="Permalink to &quot;Content integration&quot;">â€‹</a></h1><p>We see at least three ways for contributing content to an instantiated eodash ecosystem:</p><ul><li>Earth Observation (related) data</li><li>Stories for the <a href="./storytelling.html">Storytelling</a> element</li><li>Additional static pages</li></ul><p>The basic process content submission is expected to be done through configuration and content files via a version control system such as git. Depending on how the eodash ecosystem is integrated into a platform it is possible that abstraction layers, such as custom user interfaces (such as Content Management Systems) or helper tools are build on top to help users of the platform.</p><p>As these can potentially differ quite widely, in the following sections we want to look at the basic concepts to provide an understanding of the process.</p>',5),i=[s];function r(c,l,d,h,p,_){return n(),e("div",null,i)}const m=t(a,[["render",r]]);export{u as __pageData,m as default};
